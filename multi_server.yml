version: '3.4'

services:

  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    # command: redis-server --requirepass password
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
    volumes:
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
      - ./data/redis:/data/

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - ./data/mongo:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 27018:8081
    links:
      - mongo
    environment:
      - ME_CONFIG_MONGODB_URL=${MONGODB_URL}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_ROOT_USER}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_ROOT_PASSWORD}

  app_1:
    build: .
    container_name: fastapi_server_api_1
    restart: unless-stopped
    expose:
      - 6380:6380
    volumes:
      - ./:/app
    depends_on:
      - redis
    links:
      - redis
      - mongo

  app_2:
    build: .
    container_name: fastapi_server_api_2
    restart: unless-stopped
    expose:
      - 6380:6380
    volumes:
      - ./:/app
    depends_on:
      - redis
    links:
      - redis
      - mongo

  app_3:
    build: .
    container_name: fastapi_server_api_3
    restart: unless-stopped
    expose:
      - 6380:6380
    volumes:
      - ./:/app
    depends_on:
      - redis
    links:
      - redis
      - mongo

  app_4:
    build: .
    container_name: fastapi_server_api_4
    restart: unless-stopped
    expose:
      - 6380:6380
    volumes:
      - ./:/app
    depends_on:
      - redis
    links:
      - redis
      - mongo

  nginx-load-balancing:
    image: nginx:alpine
    container_name: nginx-load-balancing
    ports:
      - "6380:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app_1
      - app_2
      - app_3
      - app_4
